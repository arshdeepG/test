name: Code check

on:
  # run it during pull request
  pull_request:
  release:
    types: [published]
    
jobs:
  # define job to build and publish docker image
  build-docker-image:
    name: Build Docker image
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: get-npm-version
        if: ${{ github.event_name == 'release' }}
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        if: ${{ github.event_name == 'release' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test:${{ steps.package-version.outputs.current-version}}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/test:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/test:buildcache,mode=max

      - name: Build
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/test:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/test:buildcache,mode=max

